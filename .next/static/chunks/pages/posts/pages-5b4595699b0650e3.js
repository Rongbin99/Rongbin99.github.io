(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[666],{7612:function(e,s,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/posts/pages",function(){return n(4221)}])},4221:function(e,s,n){"use strict";n.r(s),n.d(s,{__toc:function(){return o}});var a=n(5893),t=n(2673),r=n(8473),i=n(797);n(6067);var l=n(2643);let o=[{depth:3,value:"Pages with Dynamic Routes",id:"pages-with-dynamic-routes"},{depth:2,value:"Pre-rendering",id:"pre-rendering"},{depth:3,value:"Two forms of Pre-rendering",id:"two-forms-of-pre-rendering"},{depth:2,value:"Static Generation (Recommended)",id:"static-generation-recommended"},{depth:3,value:"Static Generation without data",id:"static-generation-without-data"},{depth:3,value:"Static Generation with data",id:"static-generation-with-data"},{depth:4,value:"Scenario 1: Your page content depends on external data",id:"scenario-1-your-page-content-depends-on-external-data"},{depth:4,value:"Scenario 2: Your page paths depend on external data",id:"scenario-2-your-page-paths-depend-on-external-data"},{depth:3,value:"When should I use Static Generation?",id:"when-should-i-use-static-generation"},{depth:2,value:"Server-side Rendering",id:"server-side-rendering"},{depth:2,value:"Summary",id:"summary"}];function c(e){let s=Object.assign({h1:"h1",p:"p",strong:"strong",a:"a",code:"code",pre:"pre",span:"span",h3:"h3",blockquote:"blockquote",h2:"h2",em:"em",ul:"ul",li:"li",ol:"ol",h4:"h4"},(0,l.a)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.h1,{children:"Next.js Pages"}),"\n",(0,a.jsxs)(s.p,{children:["In Next.js, a ",(0,a.jsx)(s.strong,{children:"page"})," is a ",(0,a.jsx)(s.a,{href:"https://react.dev/reference/react/Component",children:"React Component"})," exported from a ",(0,a.jsx)(s.code,{children:".js"}),", ",(0,a.jsx)(s.code,{children:".jsx"}),", ",(0,a.jsx)(s.code,{children:".ts"}),", or ",(0,a.jsx)(s.code,{children:".tsx"})," file in the ",(0,a.jsx)(s.code,{children:"pages"})," directory. Each page is associated with a route based on its file name."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Example"}),": If you create ",(0,a.jsx)(s.code,{children:"pages/about.js"})," that exports a React component like below, it will be accessible at ",(0,a.jsx)(s.code,{children:"/about"}),"."]}),"\n",(0,a.jsx)(s.pre,{"data-language":"text","data-theme":"default",children:(0,a.jsxs)(s.code,{"data-language":"text","data-theme":"default",children:[(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"function About() {"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  return <div>About</div>"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"export default About"})})]})}),"\n",(0,a.jsx)(s.h3,{id:"pages-with-dynamic-routes",children:"Pages with Dynamic Routes"}),"\n",(0,a.jsxs)(s.p,{children:["Next.js supports pages with dynamic routes. For example, if you create a file called ",(0,a.jsx)(s.code,{children:"pages/posts/[id].js"}),", then it will be accessible at ",(0,a.jsx)(s.code,{children:"posts/1"}),", ",(0,a.jsx)(s.code,{children:"posts/2"}),", etc."]}),"\n",(0,a.jsxs)(s.blockquote,{children:["\n",(0,a.jsxs)(s.p,{children:["To learn more about dynamic routing, check the ",(0,a.jsx)(s.a,{href:"/docs/routing/dynamic-routes",children:"Dynamic Routing documentation"}),"."]}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"pre-rendering",children:"Pre-rendering"}),"\n",(0,a.jsxs)(s.p,{children:["By default, Next.js ",(0,a.jsx)(s.strong,{children:"pre-renders"})," every page. This means that Next.js generates HTML for each page in advance, instead of having it all done by client-side JavaScript. Pre-rendering can result in better performance and SEO."]}),"\n",(0,a.jsxs)(s.p,{children:["Each generated HTML is associated with minimal JavaScript code necessary for that page. When a page is loaded by the browser, its JavaScript code runs and makes the page fully interactive. (This process is called ",(0,a.jsx)(s.em,{children:"hydration"}),".)"]}),"\n",(0,a.jsx)(s.h3,{id:"two-forms-of-pre-rendering",children:"Two forms of Pre-rendering"}),"\n",(0,a.jsxs)(s.p,{children:["Next.js has two forms of pre-rendering: ",(0,a.jsx)(s.strong,{children:"Static Generation"})," and ",(0,a.jsx)(s.strong,{children:"Server-side Rendering"}),". The difference is in ",(0,a.jsx)(s.strong,{children:"when"})," it generates the HTML for a page."]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.a,{href:"#static-generation-recommended",children:(0,a.jsx)(s.strong,{children:"Static Generation (Recommended)"})}),": The HTML is generated at ",(0,a.jsx)(s.strong,{children:"build time"})," and will be reused on each request."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.a,{href:"#server-side-rendering",children:(0,a.jsx)(s.strong,{children:"Server-side Rendering"})}),": The HTML is generated on ",(0,a.jsx)(s.strong,{children:"each request"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["Importantly, Next.js lets you ",(0,a.jsx)(s.strong,{children:"choose"}),' which pre-rendering form you\'d like to use for each page. You can create a "hybrid" Next.js app by using Static Generation for most pages and using Server-side Rendering for others.']}),"\n",(0,a.jsxs)(s.p,{children:["We ",(0,a.jsx)(s.strong,{children:"recommend"})," using ",(0,a.jsx)(s.strong,{children:"Static Generation"})," over Server-side Rendering for performance reasons. Statically generated pages can be cached by CDN with no extra configuration to boost performance. However, in some cases, Server-side Rendering might be the only option."]}),"\n",(0,a.jsxs)(s.p,{children:["You can also use ",(0,a.jsx)(s.strong,{children:"Client-side Rendering"})," along with Static Generation or Server-side Rendering. That means some parts of a page can be rendered entirely by client side JavaScript. To learn more, take a look at the ",(0,a.jsx)(s.a,{href:"/docs/basic-features/data-fetching/client-side",children:"Data Fetching"})," documentation."]}),"\n",(0,a.jsx)(s.h2,{id:"static-generation-recommended",children:"Static Generation (Recommended)"}),"\n",(0,a.jsxs)(s.p,{children:["If a page uses ",(0,a.jsx)(s.strong,{children:"Static Generation"}),", the page HTML is generated at ",(0,a.jsx)(s.strong,{children:"build time"}),". That means in production, the page HTML is generated when you run ",(0,a.jsx)(s.code,{children:"next build"})," . This HTML will then be reused on each request. It can be cached by a CDN."]}),"\n",(0,a.jsxs)(s.p,{children:["In Next.js, you can statically generate pages ",(0,a.jsx)(s.strong,{children:"with or without data"}),". Let's take a look at each case."]}),"\n",(0,a.jsx)(s.h3,{id:"static-generation-without-data",children:"Static Generation without data"}),"\n",(0,a.jsx)(s.p,{children:"By default, Next.js pre-renders pages using Static Generation without fetching data. Here's an example:"}),"\n",(0,a.jsx)(s.pre,{"data-language":"text","data-theme":"default",children:(0,a.jsxs)(s.code,{"data-language":"text","data-theme":"default",children:[(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"function About() {"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  return <div>About</div>"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"export default About"})})]})}),"\n",(0,a.jsx)(s.p,{children:"Note that this page does not need to fetch any external data to be pre-rendered. In cases like this, Next.js generates a single HTML file per page during build time."}),"\n",(0,a.jsx)(s.h3,{id:"static-generation-with-data",children:"Static Generation with data"}),"\n",(0,a.jsx)(s.p,{children:"Some pages require fetching external data for pre-rendering. There are two scenarios, and one or both might apply. In each case, you can use a special function Next.js provides:"}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsxs)(s.li,{children:["Your page ",(0,a.jsx)(s.strong,{children:"content"})," depends on external data: Use ",(0,a.jsx)(s.code,{children:"getStaticProps"}),"."]}),"\n",(0,a.jsxs)(s.li,{children:["Your page ",(0,a.jsx)(s.strong,{children:"paths"})," depend on external data: Use ",(0,a.jsx)(s.code,{children:"getStaticPaths"})," (usually in addition to ",(0,a.jsx)(s.code,{children:"getStaticProps"}),")."]}),"\n"]}),"\n",(0,a.jsxs)(s.h4,{id:"scenario-1-your-page-content-depends-on-external-data",children:["Scenario 1: Your page ",(0,a.jsx)(s.strong,{children:"content"})," depends on external data"]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Example"}),": Your blog page might need to fetch the list of blog posts from a CMS (content management system)."]}),"\n",(0,a.jsx)(s.pre,{"data-language":"text","data-theme":"default",children:(0,a.jsxs)(s.code,{"data-language":"text","data-theme":"default",children:[(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"// TODO: Need to fetch `posts` (by calling some API endpoint)"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"//       before this page can be pre-rendered."})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"function Blog({ posts }) {"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  return ("})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    <ul>"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"      {posts.map((post) => ("})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"        <li>{post.title}</li>"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"      ))}"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    </ul>"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  )"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"export default Blog"})})]})}),"\n",(0,a.jsxs)(s.p,{children:["To fetch this data on pre-render, Next.js allows you to ",(0,a.jsx)(s.code,{children:"export"})," an ",(0,a.jsx)(s.code,{children:"async"})," function called ",(0,a.jsx)(s.code,{children:"getStaticProps"})," from the same file. This function gets called at build time and lets you pass fetched data to the page's ",(0,a.jsx)(s.code,{children:"props"})," on pre-render."]}),"\n",(0,a.jsx)(s.pre,{"data-language":"text","data-theme":"default",children:(0,a.jsxs)(s.code,{"data-language":"text","data-theme":"default",children:[(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"function Blog({ posts }) {"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // Render posts..."})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"// This function gets called at build time"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"export async function getStaticProps() {"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // Call an external API endpoint to get posts"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  const res = await fetch('https://.../posts')"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  const posts = await res.json()"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // By returning { props: { posts } }, the Blog component"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // will receive `posts` as a prop at build time"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  return {"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    props: {"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"      posts"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    }"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  }"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"export default Blog"})})]})}),"\n",(0,a.jsxs)(s.p,{children:["To learn more about how ",(0,a.jsx)(s.code,{children:"getStaticProps"})," works, check out the ",(0,a.jsx)(s.a,{href:"/docs/basic-features/data-fetching/get-static-props",children:"Data Fetching documentation"}),"."]}),"\n",(0,a.jsx)(s.h4,{id:"scenario-2-your-page-paths-depend-on-external-data",children:"Scenario 2: Your page paths depend on external data"}),"\n",(0,a.jsxs)(s.p,{children:["Next.js allows you to create pages with ",(0,a.jsx)(s.strong,{children:"dynamic routes"}),". For example, you can create a file called ",(0,a.jsx)(s.code,{children:"pages/posts/[id].js"})," to show a single blog post based on ",(0,a.jsx)(s.code,{children:"id"}),". This will allow you to show a blog post with ",(0,a.jsx)(s.code,{children:"id: 1"})," when you access ",(0,a.jsx)(s.code,{children:"posts/1"}),"."]}),"\n",(0,a.jsxs)(s.blockquote,{children:["\n",(0,a.jsxs)(s.p,{children:["To learn more about dynamic routing, check the ",(0,a.jsx)(s.a,{href:"/docs/routing/dynamic-routes",children:"Dynamic Routing documentation"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["However, which ",(0,a.jsx)(s.code,{children:"id"})," you want to pre-render at build time might depend on external data."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Example"}),": suppose that you've only added one blog post (with ",(0,a.jsx)(s.code,{children:"id: 1"}),") to the database. In this case, you'd only want to pre-render ",(0,a.jsx)(s.code,{children:"posts/1"})," at build time."]}),"\n",(0,a.jsxs)(s.p,{children:["Later, you might add the second post with ",(0,a.jsx)(s.code,{children:"id: 2"}),". Then you'd want to pre-render ",(0,a.jsx)(s.code,{children:"posts/2"})," as well."]}),"\n",(0,a.jsxs)(s.p,{children:["So your page ",(0,a.jsx)(s.strong,{children:"paths"})," that are pre-rendered depend on external data**.** To handle this, Next.js lets you ",(0,a.jsx)(s.code,{children:"export"})," an ",(0,a.jsx)(s.code,{children:"async"})," function called ",(0,a.jsx)(s.code,{children:"getStaticPaths"})," from a dynamic page (",(0,a.jsx)(s.code,{children:"pages/posts/[id].js"})," in this case). This function gets called at build time and lets you specify which paths you want to pre-render."]}),"\n",(0,a.jsx)(s.pre,{"data-language":"text","data-theme":"default",children:(0,a.jsxs)(s.code,{"data-language":"text","data-theme":"default",children:[(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"// This function gets called at build time"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"export async function getStaticPaths() {"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // Call an external API endpoint to get posts"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  const res = await fetch('https://.../posts')"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  const posts = await res.json()"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // Get the paths we want to pre-render based on posts"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  const paths = posts.map((post) => ({"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    params: { id: post.id }"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  }))"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // We'll pre-render only these paths at build time."})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // { fallback: false } means other routes should 404."})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  return { paths, fallback: false }"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})})]})}),"\n",(0,a.jsxs)(s.p,{children:["Also in ",(0,a.jsx)(s.code,{children:"pages/posts/[id].js"}),", you need to export ",(0,a.jsx)(s.code,{children:"getStaticProps"})," so that you can fetch the data about the post with this ",(0,a.jsx)(s.code,{children:"id"})," and use it to pre-render the page:"]}),"\n",(0,a.jsx)(s.pre,{"data-language":"text","data-theme":"default",children:(0,a.jsxs)(s.code,{"data-language":"text","data-theme":"default",children:[(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"function Post({ post }) {"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // Render post..."})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"export async function getStaticPaths() {"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // ..."})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"// This also gets called at build time"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"export async function getStaticProps({ params }) {"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // params contains the post `id`."})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // If the route is like /posts/1, then params.id is 1"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  const res = await fetch(`https://.../posts/${params.id}`)"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  const post = await res.json()"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // Pass post data to the page via props"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  return { props: { post } }"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"export default Post"})})]})}),"\n",(0,a.jsxs)(s.p,{children:["To learn more about how ",(0,a.jsx)(s.code,{children:"getStaticPaths"})," works, check out the ",(0,a.jsx)(s.a,{href:"/docs/basic-features/data-fetching/get-static-paths",children:"Data Fetching documentation"}),"."]}),"\n",(0,a.jsx)(s.h3,{id:"when-should-i-use-static-generation",children:"When should I use Static Generation?"}),"\n",(0,a.jsxs)(s.p,{children:["We recommend using ",(0,a.jsx)(s.strong,{children:"Static Generation"})," (with and without data) whenever possible because your page can be built once and served by CDN, which makes it much faster than having a server render the page on every request."]}),"\n",(0,a.jsx)(s.p,{children:"You can use Static Generation for many types of pages, including:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Marketing pages"}),"\n",(0,a.jsx)(s.li,{children:"Blog posts"}),"\n",(0,a.jsx)(s.li,{children:"E-commerce product listings"}),"\n",(0,a.jsx)(s.li,{children:"Help and documentation"}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:['You should ask yourself: "Can I pre-render this page ',(0,a.jsx)(s.strong,{children:"ahead"})," of a user's request?\" If the answer is yes, then you should choose Static Generation."]}),"\n",(0,a.jsxs)(s.p,{children:["On the other hand, Static Generation is ",(0,a.jsx)(s.strong,{children:"not"})," a good idea if you cannot pre-render a page ahead of a user's request. Maybe your page shows frequently updated data, and the page content changes on every request."]}),"\n",(0,a.jsx)(s.p,{children:"In cases like this, you can do one of the following:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["Use Static Generation with ",(0,a.jsx)(s.strong,{children:"Client-side Rendering:"})," You can skip pre-rendering some parts of a page and then use client-side JavaScript to populate them. To learn more about this approach, check out the ",(0,a.jsx)(s.a,{href:"/docs/basic-features/data-fetching/client-side",children:"Data Fetching documentation"}),"."]}),"\n",(0,a.jsxs)(s.li,{children:["Use ",(0,a.jsx)(s.strong,{children:"Server-Side Rendering:"})," Next.js pre-renders a page on each request. It will be slower because the page cannot be cached by a CDN, but the pre-rendered page will always be up-to-date. We'll talk about this approach below."]}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"server-side-rendering",children:"Server-side Rendering"}),"\n",(0,a.jsxs)(s.blockquote,{children:["\n",(0,a.jsx)(s.p,{children:'Also referred to as "SSR" or "Dynamic Rendering".'}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["If a page uses ",(0,a.jsx)(s.strong,{children:"Server-side Rendering"}),", the page HTML is generated on ",(0,a.jsx)(s.strong,{children:"each request"}),"."]}),"\n",(0,a.jsxs)(s.p,{children:["To use Server-side Rendering for a page, you need to ",(0,a.jsx)(s.code,{children:"export"})," an ",(0,a.jsx)(s.code,{children:"async"})," function called ",(0,a.jsx)(s.code,{children:"getServerSideProps"}),". This function will be called by the server on every request."]}),"\n",(0,a.jsxs)(s.p,{children:["For example, suppose that your page needs to pre-render frequently updated data (fetched from an external API). You can write ",(0,a.jsx)(s.code,{children:"getServerSideProps"})," which fetches this data and passes it to ",(0,a.jsx)(s.code,{children:"Page"})," like below:"]}),"\n",(0,a.jsx)(s.pre,{"data-language":"text","data-theme":"default",children:(0,a.jsxs)(s.code,{"data-language":"text","data-theme":"default",children:[(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"function Page({ data }) {"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // Render data..."})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"// This gets called on every request"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"export async function getServerSideProps() {"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // Fetch data from external API"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  const res = await fetch(`https://.../data`)"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  const data = await res.json()"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // Pass data to the page via props"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  return { props: { data } }"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,a.jsx)(s.span,{className:"line",children:(0,a.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"export default Page"})})]})}),"\n",(0,a.jsxs)(s.p,{children:["As you can see, ",(0,a.jsx)(s.code,{children:"getServerSideProps"})," is similar to ",(0,a.jsx)(s.code,{children:"getStaticProps"}),", but the difference is that ",(0,a.jsx)(s.code,{children:"getServerSideProps"})," is run on every request instead of on build time."]}),"\n",(0,a.jsxs)(s.p,{children:["To learn more about how ",(0,a.jsx)(s.code,{children:"getServerSideProps"})," works, check out our ",(0,a.jsx)(s.a,{href:"/docs/basic-features/data-fetching/get-server-side-props",children:"Data Fetching documentation"})]}),"\n",(0,a.jsx)(s.h2,{id:"summary",children:"Summary"}),"\n",(0,a.jsx)(s.p,{children:"We've discussed two forms of pre-rendering for Next.js."}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Static Generation (Recommended):"})," The HTML is generated at ",(0,a.jsx)(s.strong,{children:"build time"})," and will be reused on each request. To make a page use Static Generation, either export the page component, or export ",(0,a.jsx)(s.code,{children:"getStaticProps"})," (and ",(0,a.jsx)(s.code,{children:"getStaticPaths"})," if necessary). It's great for pages that can be pre-rendered ahead of a user's request. You can also use it with Client-side Rendering to bring in additional data."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Server-side Rendering:"})," The HTML is generated on ",(0,a.jsx)(s.strong,{children:"each request"}),". To make a page use Server-side Rendering, export ",(0,a.jsx)(s.code,{children:"getServerSideProps"}),". Because Server-side Rendering results in slower performance than Static Generation, use this only if absolutely necessary."]}),"\n"]})]})}let d={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,l.a)(),e.components);return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(c,{...e})}):c(e)},pageOpts:{filePath:"pages/posts/pages.md",route:"/posts/pages",frontMatter:{title:"Next.js Pages",date:"2021/3/18",description:"Learn more about Next.js pages.",tag:"web development",author:"You"},pageMap:[{kind:"MdxPage",name:"arts",route:"/arts",frontMatter:{type:"page",title:"Arts Portfolio",date:"2024-02-23T00:00:00.000Z"}},{kind:"MdxPage",name:"index",route:"/",frontMatter:{type:"page",title:"About",date:"2021-03-19T00:00:00.000Z"}},{kind:"Folder",name:"posts",route:"/posts",children:[{kind:"MdxPage",name:"index",route:"/posts",frontMatter:{type:"posts",title:"Posts",date:"2021-03-18T00:00:00.000Z"}},{kind:"MdxPage",name:"markdown",route:"/posts/markdown",frontMatter:{title:"Markdown Examples",date:"2021/3/19",description:"View examples of all possible Markdown options.",tag:"web development",author:"You"}},{kind:"MdxPage",name:"pages",route:"/posts/pages",frontMatter:{title:"Next.js Pages",date:"2021/3/18",description:"Learn more about Next.js pages.",tag:"web development",author:"You"}},{kind:"Meta",data:{markdown:"Markdown Examples",pages:"Next.js Pages",index:"Posts"}}]},{kind:"Meta",data:{arts:"Arts Portfolio",index:"About"}}],flexsearch:{codeblocks:!0},title:"Next.js Pages",headings:o},pageNextRoute:"/posts/pages",nextraLayout:r.ZP,themeConfig:i.Z};s.default=(0,t.j)(d)},797:function(e,s,n){"use strict";var a=n(5893),t=n(9554),r=n.n(t),i=n(5675),l=n.n(i);let o=new Date().getFullYear();s.Z={footer:(0,a.jsxs)("footer",{className:"jsx-58fa8e3ddd801996",children:[(0,a.jsxs)("small",{className:"jsx-58fa8e3ddd801996",children:["Made by Rongbin Gu. \xa9 ",(0,a.jsx)("time",{className:"jsx-58fa8e3ddd801996",children:o}),(0,a.jsx)("a",{href:"/feed.xml",className:"jsx-58fa8e3ddd801996",children:"RSS"}),(0,a.jsx)("a",{href:"https://github.com/Rongbin99/",target:"_blank",rel:"noopener noreferrer",className:"jsx-58fa8e3ddd801996",children:(0,a.jsx)(l(),{src:"/images/GitHub-Symbol.png",alt:"GitHub",height:43,width:43,priority:!0,className:"next-image",style:{marginRight:"1rem"}})}),(0,a.jsx)("a",{href:"https://www.instagram.com/rongbin99/",target:"_blank",rel:"noopener noreferrer",className:"jsx-58fa8e3ddd801996",children:(0,a.jsx)(l(),{src:"/images/Instagram_Glyph_Gradient.svg",alt:"Instagram",height:25,width:25,priority:!0,className:"next-image",style:{marginRight:"1rem"}})}),(0,a.jsx)("a",{href:"https://twitter.com/rongbin99",target:"_blank",rel:"noopener noreferrer",className:"jsx-58fa8e3ddd801996",children:(0,a.jsx)(l(),{src:"/images/sl_z_072523_61700_01.jpg",alt:"X / Twitter",height:25,width:25,priority:!0,className:"next-image",style:{marginRight:"1rem"}})}),(0,a.jsx)("a",{href:"https://www.linkedin.com/in/rongbin99/",target:"_blank",rel:"noopener noreferrer",className:"jsx-58fa8e3ddd801996",children:(0,a.jsx)(l(),{src:"/images/LI-In-Bug.png",alt:"LinkedIn",height:30,width:30,priority:!0,className:"next-image",style:{marginRight:"1rem"}})})]}),(0,a.jsx)(r(),{id:"58fa8e3ddd801996",children:"footer.jsx-58fa8e3ddd801996{margin-top:7rem}a.jsx-58fa8e3ddd801996{float:right}"})]})}}},function(e){e.O(0,[346,888,774,179],function(){return e(e.s=7612)}),_N_E=e.O()}]);